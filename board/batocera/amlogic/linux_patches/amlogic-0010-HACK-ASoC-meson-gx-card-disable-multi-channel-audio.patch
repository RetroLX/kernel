From cf57575412d070319b45f12934e8973ee776e25f Mon Sep 17 00:00:00 2001
From: Christian Hewitt <christianshewitt@gmail.com>
Date: Tue, 2 Nov 2021 10:38:56 +0000
Subject: [PATCH 10/61] HACK: ASoC: meson: gx-card: disable multi-channel audio

This forces all GXBB/GXL/GXM devices using the AIU driver to output stereo
audio only, to workaround a randomly occurring bug in multi-channel output
that results in loud noise at full volume. See discussion in [0] for more
information.

[0] https://patchwork.kernel.org/project/linux-amlogic/cover/20211002234313.3209294-1-martin.blumenstingl@googlemail.com/

Although multi-channel output otherwise works well, users get a rather bad
surprise when 'the noise' occurs and we'd rather have less-alarming stereo
output so that nightly releases can resume. It also supports retro-gaming
distro-derivatives of LibreELEC who don't need multi-channel output.

Signed-off-by: Christian Hewitt <christianshewitt@gmail.com>
---
 sound/soc/meson/aiu-encoder-i2s.c | 4 ++--
 sound/soc/meson/aiu-fifo-i2s.c    | 6 +++---
 2 files changed, 5 insertions(+), 5 deletions(-)

diff --git a/sound/soc/meson/aiu-encoder-i2s.c b/sound/soc/meson/aiu-encoder-i2s.c
index 932224552146..25528b0014e9 100644
--- a/sound/soc/meson/aiu-encoder-i2s.c
+++ b/sound/soc/meson/aiu-encoder-i2s.c
@@ -74,8 +74,8 @@ static int aiu_encoder_i2s_setup_desc(struct snd_soc_component *component,
 	unsigned int desc = AIU_I2S_SOURCE_DESC_MODE_SPLIT;
 
 	/* Reset required to update the pipeline */
-	snd_soc_component_write(component, AIU_RST_SOFT, AIU_RST_SOFT_I2S_FAST);
-	snd_soc_component_read(component, AIU_I2S_SYNC);
+	//snd_soc_component_write(component, AIU_RST_SOFT, AIU_RST_SOFT_I2S_FAST);
+	//snd_soc_component_read(component, AIU_I2S_SYNC);
 
 	switch (params_physical_width(params)) {
 	case 16: /* Nothing to do */
diff --git a/sound/soc/meson/aiu-fifo-i2s.c b/sound/soc/meson/aiu-fifo-i2s.c
index 2388a2d0b3a6..c0a1b16d5870 100644
--- a/sound/soc/meson/aiu-fifo-i2s.c
+++ b/sound/soc/meson/aiu-fifo-i2s.c
@@ -51,9 +51,9 @@ static int aiu_fifo_i2s_trigger(struct snd_pcm_substream *substream, int cmd,
 	case SNDRV_PCM_TRIGGER_START:
 	case SNDRV_PCM_TRIGGER_RESUME:
 	case SNDRV_PCM_TRIGGER_PAUSE_RELEASE:
-		snd_soc_component_write(component, AIU_RST_SOFT,
-					AIU_RST_SOFT_I2S_FAST);
-		snd_soc_component_read(component, AIU_I2S_SYNC);
+		//snd_soc_component_write(component, AIU_RST_SOFT,
+		//			AIU_RST_SOFT_I2S_FAST);
+		//snd_soc_component_read(component, AIU_I2S_SYNC);
 		break;
 	}
 
-- 
2.17.1

