# Builds a RetroLX kernel

#
# These are the variables to edit
#

variables:
- name: version
  value: 5.15.2
- name: arch
  value: aw32
- name: repositoryHost
  value: $(REPOSITORY_HOST)
- name: repositoryUser
  value: $(REPOSITORY_USER)
- name: repositoryPassword
  value: $(REPOSITORY_PASSWORD)

#
# This is a template, all of them SHOULD look the same
#

trigger:
  batch: true # batch changes if true; start a new build for every push if false (default)
  branches:
    include: [ci-wip]

jobs:
- job: build
  timeoutInMinutes: 360
  pool:
    vmImage: ubuntu-20.04
  container:
    image: retrolx/build-environment-ubuntu-20.10:latest
    options: --add-host invisible-mirror.net:1.1.1.1 # Blocked mirror workaround
  steps:
  - script: |
      echo "Build"
      printenv
      mkdir -p output/kernel-${{ variables.arch }}/images
      touch output/kernel-${{ variables.arch }}/images/kernel.tar.gz
      mkdir publish
      mv output/kernel-${{ variables.arch }}/images/kernel.tar.gz publish/kernel-${{ variables.arch }}-${{ variables.version }}-$(Build.BuildNumber).tar.gz
  - script: |
      echo "Upload"
      ping ${{ variables.repositoryHost }}
      lftp << END_SCRIPT
      open sftp://${{ variables.repositoryHost }}
      user ${{ variables.repositoryUser }} ${{ variables.repositoryPassword }}
      mkdir -p www/kernel/${{ variables.arch }}/${{ variables.version }}-$(Build.BuildNumber)
      put publish/kernel-${{ variables.arch }}-${{ variables.version }}-$(Build.BuildNumber).tar.gz -o www/kernel/${{ variables.arch }}/${{ variables.version }}-$(Build.BuildNumber)/kernel-${{ variables.arch }}-${{ variables.version }}-$(Build.BuildNumber).tar.gz
      quit
      END_SCRIPT